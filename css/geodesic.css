/*TOP-LEVEL*/
/*Nice text rendering and sizing*/
html {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body {
  margin: 0;
  font-size: 16px;
}

/*Set up sane box-sizing*/
* {
  box-sizing: border-box;
}

/*BLOCK ELEMENTS*/
/*No default margins or paddings*/
h1,
h2,
h3,
h4,
p,
blockquote,
figure,
ol,
ul,
menu,
dl,
dd {
  margin: 0;
  padding: 0;
}

/*Make sure newer block elements always work, even in IE*/
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/*TEXT AND IMAGE RULES*/
/*No heading styles*/
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: normal;
}

/*No more ugly default links*/
a {
  text-decoration: none;
  color: inherit;
}

/*Automatically size images nicely*/
img {
  height: auto;
  border: 0;
}

cite {
  font-style: normal;
}

dl {
  list-style-type: none;
}

/*FORMS*/
/*Correct defaults and some inheritance issues*/
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  font: inherit;
  margin: 0;
  padding: 0;
  outline: none;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  -o-appearance: none;
}

input[type="checkbox"] {
  appearance: checkbox;
  -webkit-appearance: checkbox;
  -moz-appearance: checkbox;
  -o-appearance: checkbox;
}

input[type="radio"] {
  appearance: radio;
  -webkit-appearance: radio;
  -moz-appearance: radio;
  -o-appearance: radio;
}

/*TABLE*/
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td, th {
  text-align: left;
  font-weight: normal;
}

html {
  box-sizing: border-box;
}

*, *::after, *::before {
  box-sizing: inherit;
}

/*
  FLEX HELPERS

  Common flex tasks in plain English, because you shouldn't have to learn what
  "flex basis" means in order to make a web page. *I* don't even know what it
  means.

  First do `@include flex;`, then apply one of these rules to your object class.
*/
/*
  MATH HELPERS

  Useful math for making scales of values that stay in line when the unit
  changes. Stay consistent (when it makes sense)!

  Thanks to Dropbox's Scooter for this idea + file.
  https://github.com/dropbox/scooter/blob/master/scss/functions/_maths.scss
*/
/*
  BREAKPOINT SETTINGS

  These variables set up media queries that you can use throughout the system.
  Use a breakpoint variable inside the `media` mixin to apply rules within a
  media query. Like so:

  ```
  @include media($small-up) {
    web-design: is-fun;
  }
  ```
*/
/*
  GRID SETTINGS
  List of grids with their individual breakpoints, values, and sub-grids. Grid
  classes are generated from these settings in objects/_grid.scss
*/
/*
  COLOR SETTINGS

  Map of colors to generate classes, and a function to return a color based
  on name for manually-written classes.
*/
/*
  TYPOGRAPHY RULES

  Font stacks, pervasive typo settings of all kinds.
*/
body {
  color: #3F3E4C;
  font-family: "Roboto", Helvetica, sans-serif;
}

a {
  color: #222;
  border-bottom: 2px solid #F8708E;
  -webkit-transition-property: background-color color;
  -moz-transition-property: background-color color;
  transition-property: background-color color;
  -webkit-transition-duration: 0.2s;
  -moz-transition-duration: 0.2s;
  transition-duration: 0.2s;
  -webkit-transition-timing-function: ease;
  -moz-transition-timing-function: ease;
  transition-timing-function: ease;
}

a:hover {
  background-color: #feeaee;
}

.context-base p, .context-base ul, .context-base ol, .context-base dl, .context-base blockquote {
  margin-top: 1em;
  margin-bottom: 1em;
}

.context-base h2, .context-base h3, .context-base h4, .context-base h5, .context-base h6 {
  margin-top: 2em;
}

.context-base h2 + h2 {
  margin-top: 1em;
}

.context-base h2 + h3 {
  margin-top: 1em;
}

.context-base h2 + h4 {
  margin-top: 1em;
}

.context-base h2 + h5 {
  margin-top: 1em;
}

.context-base h2 + h6 {
  margin-top: 1em;
}

.context-base h3 + h3 {
  margin-top: 1em;
}

.context-base h3 + h4 {
  margin-top: 1em;
}

.context-base h3 + h5 {
  margin-top: 1em;
}

.context-base h3 + h6 {
  margin-top: 1em;
}

.context-base h4 + h4 {
  margin-top: 1em;
}

.context-base h4 + h5 {
  margin-top: 1em;
}

.context-base h4 + h6 {
  margin-top: 1em;
}

.context-base h5 + h5 {
  margin-top: 1em;
}

.context-base h5 + h6 {
  margin-top: 1em;
}

.context-base h6 + h6 {
  margin-top: 1em;
}

.context-base code {
  background-color: #ececee;
  color: #656976;
  font-family: "Source Code Pro", Consolas, Menlo, monospace;
  font-size: 0.8em;
  padding: 0.1em;
  border-radius: 2px;
}

/*
  GRID
  Responsive chainable grid classes, complete with subgrids. These are all
  generated from the settings in $grids-breakpoints.
*/
@media screen and (min-width: 0px) {
  .small-1 {
    position: relative;
    float: left;
    width: 25%;
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
  .small-push-1 {
    left: 25%;
  }
  .small-pull-1 {
    left: -25%;
  }
  .small-offset-1 {
    margin-left: 25%;
  }
  .small-2 {
    position: relative;
    float: left;
    width: 50%;
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
  .small-push-2 {
    left: 50%;
  }
  .small-pull-2 {
    left: -50%;
  }
  .small-offset-2 {
    margin-left: 50%;
  }
  .small-3 {
    position: relative;
    float: left;
    width: 75%;
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
  .small-push-3 {
    left: 75%;
  }
  .small-pull-3 {
    left: -75%;
  }
  .small-offset-3 {
    margin-left: 75%;
  }
  .small-4 {
    position: relative;
    float: left;
    width: 100%;
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
  .small-push-4 {
    left: 100%;
  }
  .small-pull-4 {
    left: -100%;
  }
  .small-offset-4 {
    margin-left: 100%;
  }
  .small-1-of-3 {
    position: relative;
    float: left;
    width: 25%;
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
  .small-2-of-3 {
    position: relative;
    float: left;
    width: 50%;
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
  .small-3-of-3 {
    position: relative;
    float: left;
    width: 75%;
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
}

@media screen and (min-width: 540px) {
  .large-1 {
    position: relative;
    float: left;
    width: 12.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-1 {
    left: 12.5%;
  }
  .large-pull-1 {
    left: -12.5%;
  }
  .large-offset-1 {
    margin-left: 12.5%;
  }
  .large-2 {
    position: relative;
    float: left;
    width: 25%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-2 {
    left: 25%;
  }
  .large-pull-2 {
    left: -25%;
  }
  .large-offset-2 {
    margin-left: 25%;
  }
  .large-3 {
    position: relative;
    float: left;
    width: 37.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-3 {
    left: 37.5%;
  }
  .large-pull-3 {
    left: -37.5%;
  }
  .large-offset-3 {
    margin-left: 37.5%;
  }
  .large-4 {
    position: relative;
    float: left;
    width: 50%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-4 {
    left: 50%;
  }
  .large-pull-4 {
    left: -50%;
  }
  .large-offset-4 {
    margin-left: 50%;
  }
  .large-5 {
    position: relative;
    float: left;
    width: 62.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-5 {
    left: 62.5%;
  }
  .large-pull-5 {
    left: -62.5%;
  }
  .large-offset-5 {
    margin-left: 62.5%;
  }
  .large-6 {
    position: relative;
    float: left;
    width: 75%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-6 {
    left: 75%;
  }
  .large-pull-6 {
    left: -75%;
  }
  .large-offset-6 {
    margin-left: 75%;
  }
  .large-7 {
    position: relative;
    float: left;
    width: 87.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-7 {
    left: 87.5%;
  }
  .large-pull-7 {
    left: -87.5%;
  }
  .large-offset-7 {
    margin-left: 87.5%;
  }
  .large-8 {
    position: relative;
    float: left;
    width: 100%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-push-8 {
    left: 100%;
  }
  .large-pull-8 {
    left: -100%;
  }
  .large-offset-8 {
    margin-left: 100%;
  }
  .large-1-of-4 {
    position: relative;
    float: left;
    width: 12.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-2-of-4 {
    position: relative;
    float: left;
    width: 25%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-3-of-4 {
    position: relative;
    float: left;
    width: 37.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-4-of-4 {
    position: relative;
    float: left;
    width: 50%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-1-of-6 {
    position: relative;
    float: left;
    width: 12.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-2-of-6 {
    position: relative;
    float: left;
    width: 25%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-3-of-6 {
    position: relative;
    float: left;
    width: 37.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-4-of-6 {
    position: relative;
    float: left;
    width: 50%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-5-of-6 {
    position: relative;
    float: left;
    width: 62.5%;
    padding-left: 10px;
    padding-right: 10px;
  }
  .large-6-of-6 {
    position: relative;
    float: left;
    width: 75%;
    padding-left: 10px;
    padding-right: 10px;
  }
}

.grid-row {
  max-width: 720px;
  margin: 0 auto;
}

@media screen and (min-width: 0px) {
  .grid-row {
    padding-left: 12.5px;
    padding-right: 12.5px;
  }
}

@media screen and (min-width: 540px) {
  .grid-row {
    padding-left: 10px;
    padding-right: 10px;
  }
}

.button {
  -webkit-appearance: none;
  -moz-appearance: none;
  -ms-appearance: none;
  -o-appearance: none;
  appearance: none;
  box-sizing: border-box;
  display: inline-block;
  padding: 0.75em;
  border: 0;
  cursor: pointer;
  text-align: center;
}

/*
  COLORS
*/
.color-blue {
  color: #6899C6;
}

.bg-blue {
  background-color: #6899C6;
}

.color-navy {
  color: #3F3E4C;
}

.bg-navy {
  background-color: #3F3E4C;
}

.color-green {
  color: #7FC28F;
}

.bg-green {
  background-color: #7FC28F;
}

.color-pink {
  color: #F8708E;
}

.bg-pink {
  background-color: #F8708E;
}

.color-gray {
  color: #656976;
}

.bg-gray {
  background-color: #656976;
}

.color-offblack {
  color: #222;
}

.bg-offblack {
  background-color: #222;
}

.color-white {
  color: #FFFFFF;
}

.bg-white {
  background-color: #FFFFFF;
}

/*
  SPACE

  Define spacing utility classes! I'm keeping some settings here because they're
  only used here and they make more sense in context.
*/
/*
  SPACE STEPS

  Generates rules that look like:

  ```
  .mar-t-one { margin-top: 20px; }
  .mar-b-half { margin-bottom: 10px; }
  .pad-y-double {
    padding-top: 40px;
    padding-bottom: 40px;
  }
  ```
*/
.mar-y-zero {
  margin-top: 0;
  margin-bottom: 0;
}

.pad-y-zero {
  padding-top: 0;
  padding-bottom: 0;
}

.mar-y-quarter {
  margin-top: 5px;
  margin-bottom: 5px;
}

.pad-y-quarter {
  padding-top: 5px;
  padding-bottom: 5px;
}

.mar-y-half {
  margin-top: 10px;
  margin-bottom: 10px;
}

.pad-y-half {
  padding-top: 10px;
  padding-bottom: 10px;
}

.mar-y-one {
  margin-top: 20px;
  margin-bottom: 20px;
}

.pad-y-one {
  padding-top: 20px;
  padding-bottom: 20px;
}

.mar-y-double {
  margin-top: 40px;
  margin-bottom: 40px;
}

.pad-y-double {
  padding-top: 40px;
  padding-bottom: 40px;
}

.mar-y-quad {
  margin-top: 80px;
  margin-bottom: 80px;
}

.pad-y-quad {
  padding-top: 80px;
  padding-bottom: 80px;
}

.mar-zero {
  margin: 0;
}

.pad-zero {
  padding: 0;
}

.mar-quarter {
  margin: 5px;
}

.pad-quarter {
  padding: 5px;
}

.mar-half {
  margin: 10px;
}

.pad-half {
  padding: 10px;
}

.mar-one {
  margin: 20px;
}

.pad-one {
  padding: 20px;
}

.mar-double {
  margin: 40px;
}

.pad-double {
  padding: 40px;
}

.mar-quad {
  margin: 80px;
}

.pad-quad {
  padding: 80px;
}

.mar-t-zero {
  margin-top: 0;
}

.pad-t-zero {
  padding-top: 0;
}

.mar-t-quarter {
  margin-top: 5px;
}

.pad-t-quarter {
  padding-top: 5px;
}

.mar-t-half {
  margin-top: 10px;
}

.pad-t-half {
  padding-top: 10px;
}

.mar-t-one {
  margin-top: 20px;
}

.pad-t-one {
  padding-top: 20px;
}

.mar-t-double {
  margin-top: 40px;
}

.pad-t-double {
  padding-top: 40px;
}

.mar-t-quad {
  margin-top: 80px;
}

.pad-t-quad {
  padding-top: 80px;
}

.mar-b-zero {
  margin-bottom: 0;
}

.pad-b-zero {
  padding-bottom: 0;
}

.mar-b-quarter {
  margin-bottom: 5px;
}

.pad-b-quarter {
  padding-bottom: 5px;
}

.mar-b-half {
  margin-bottom: 10px;
}

.pad-b-half {
  padding-bottom: 10px;
}

.mar-b-one {
  margin-bottom: 20px;
}

.pad-b-one {
  padding-bottom: 20px;
}

.mar-b-double {
  margin-bottom: 40px;
}

.pad-b-double {
  padding-bottom: 40px;
}

.mar-b-quad {
  margin-bottom: 80px;
}

.pad-b-quad {
  padding-bottom: 80px;
}

.mar-l-zero {
  margin-left: 0;
}

.pad-l-zero {
  padding-left: 0;
}

.mar-l-quarter {
  margin-left: 5px;
}

.pad-l-quarter {
  padding-left: 5px;
}

.mar-l-half {
  margin-left: 10px;
}

.pad-l-half {
  padding-left: 10px;
}

.mar-l-one {
  margin-left: 20px;
}

.pad-l-one {
  padding-left: 20px;
}

.mar-l-double {
  margin-left: 40px;
}

.pad-l-double {
  padding-left: 40px;
}

.mar-l-quad {
  margin-left: 80px;
}

.pad-l-quad {
  padding-left: 80px;
}

.mar-r-zero {
  margin-right: 0;
}

.pad-r-zero {
  padding-right: 0;
}

.mar-r-quarter {
  margin-right: 5px;
}

.pad-r-quarter {
  padding-right: 5px;
}

.mar-r-half {
  margin-right: 10px;
}

.pad-r-half {
  padding-right: 10px;
}

.mar-r-one {
  margin-right: 20px;
}

.pad-r-one {
  padding-right: 20px;
}

.mar-r-double {
  margin-right: 40px;
}

.pad-r-double {
  padding-right: 40px;
}

.mar-r-quad {
  margin-right: 80px;
}

.pad-r-quad {
  padding-right: 80px;
}

/*
  GUTTER SPACES

  Generates space classes based on the grid gutter sizes.
*/
@media screen and (min-width: 0px) {
  .mar-gutter {
    margin: 25px;
  }
}

@media screen and (min-width: 540px) {
  .mar-gutter {
    margin: 20px;
  }
}

@media screen and (min-width: 0px) {
  .pad-gutter {
    padding: 25px;
  }
}

@media screen and (min-width: 540px) {
  .pad-gutter {
    padding: 20px;
  }
}

@media screen and (min-width: 0px) {
  .mar-t-gutter {
    margin-top: 25px;
  }
}

@media screen and (min-width: 540px) {
  .mar-t-gutter {
    margin-top: 20px;
  }
}

@media screen and (min-width: 0px) {
  .pad-t-gutter {
    padding-top: 25px;
  }
}

@media screen and (min-width: 540px) {
  .pad-t-gutter {
    padding-top: 20px;
  }
}

@media screen and (min-width: 0px) {
  .mar-b-gutter {
    margin-bottom: 25px;
  }
}

@media screen and (min-width: 540px) {
  .mar-b-gutter {
    margin-bottom: 20px;
  }
}

@media screen and (min-width: 0px) {
  .pad-b-gutter {
    padding-bottom: 25px;
  }
}

@media screen and (min-width: 540px) {
  .pad-b-gutter {
    padding-bottom: 20px;
  }
}

@media screen and (min-width: 0px) {
  .mar-l-gutter {
    margin-left: 25px;
  }
}

@media screen and (min-width: 540px) {
  .mar-l-gutter {
    margin-left: 20px;
  }
}

@media screen and (min-width: 0px) {
  .pad-l-gutter {
    padding-left: 25px;
  }
}

@media screen and (min-width: 540px) {
  .pad-l-gutter {
    padding-left: 20px;
  }
}

@media screen and (min-width: 0px) {
  .mar-r-gutter {
    margin-right: 25px;
  }
}

@media screen and (min-width: 540px) {
  .mar-r-gutter {
    margin-right: 20px;
  }
}

@media screen and (min-width: 0px) {
  .pad-r-gutter {
    padding-right: 25px;
  }
}

@media screen and (min-width: 540px) {
  .pad-r-gutter {
    padding-right: 20px;
  }
}

.mar-x-auto {
  margin-left: auto;
  margin-right: auto;
}

/*
  TYPE
*/
/*
  TYPE SIZES

  The sizes allow for a responsive scale for each class, so that scaling type up
  as screen sizes increase doesn't require multiple classes and our typography
  doesn't become a mess of disparate rules. Switch 'em up if you need, but pay
  attention to how the rest of the system changes.
*/
.font-alpha {
  font-size: 15px;
}

.font-beta {
  font-size: 20px;
}

.font-gamma {
  font-size: 23px;
}

@media screen and (min-width: 768px) {
  .font-gamma {
    font-size: 24px;
  }
}

.font-delta {
  font-size: 28px;
}

@media screen and (min-width: 768px) {
  .font-delta {
    font-size: 36px;
  }
}

.font-omega {
  font-size: 42px;
}

@media screen and (min-width: 768px) {
  .font-omega {
    font-size: 56px;
  }
}

/*
  TYPE LINE HEIGHTS
*/
.line-solid {
  line-height: 1;
}

.line-close {
  line-height: 1.15;
}

.line-text {
  line-height: 1.4;
}

/*
  TYPE STYLE
*/
.face-text {
  font-family: "Roboto", Helvetica, sans-serif;
}

.face-code {
  font-family: "Source Code Pro", Consolas, Menlo, monospace;
}

.underline {
  text-decoration: underline;
}

.tracked {
  letter-spacing: 0.15em;
}

.uppercase {
  text-transform: uppercase;
}

.italic {
  font-style: italic;
}

.light {
  font-weight: 300;
}

.bold {
  font-weight: bold;
}

.heavy {
  font-weight: 900;
}

/*
  TYPE ALIGNMENT
*/
.align-l {
  text-align: left;
}

.align-r {
  text-align: right;
}

.align-c {
  text-align: center;
}

@media screen and (min-width: 0px) {
  .align-l--small {
    text-align: left;
  }
  .align-r--small {
    text-align: right;
  }
  .align-c--small {
    text-align: center;
  }
}

@media screen and (min-width: 540px) {
  .align-l--medium {
    text-align: left;
  }
  .align-r--medium {
    text-align: right;
  }
  .align-c--medium {
    text-align: center;
  }
}

@media screen and (min-width: 768px) {
  .align-l--large {
    text-align: left;
  }
  .align-r--large {
    text-align: right;
  }
  .align-c--large {
    text-align: center;
  }
}

@media screen and (min-width: 1024px) {
  .align-l--xlarge {
    text-align: left;
  }
  .align-r--xlarge {
    text-align: right;
  }
  .align-c--xlarge {
    text-align: center;
  }
}

/*
  DISPLAY
*/
.inline {
  display: inline;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.table {
  display: table;
}

.table-cell {
  display: table-cell;
}

@media screen and (min-width: 0px) {
  .inline--small {
    display: inline;
  }
  .block--small {
    display: block;
  }
  .inline-block--small {
    display: inline-block;
  }
  .table--small {
    display: table;
  }
  .table-cell--small {
    display: table-cell;
  }
}

@media screen and (min-width: 540px) {
  .inline--medium {
    display: inline;
  }
  .block--medium {
    display: block;
  }
  .inline-block--medium {
    display: inline-block;
  }
  .table--medium {
    display: table;
  }
  .table-cell--medium {
    display: table-cell;
  }
}

@media screen and (min-width: 768px) {
  .inline--large {
    display: inline;
  }
  .block--large {
    display: block;
  }
  .inline-block--large {
    display: inline-block;
  }
  .table--large {
    display: table;
  }
  .table-cell--large {
    display: table-cell;
  }
}

@media screen and (min-width: 1024px) {
  .inline--xlarge {
    display: inline;
  }
  .block--xlarge {
    display: block;
  }
  .inline-block--xlarge {
    display: inline-block;
  }
  .table--xlarge {
    display: table;
  }
  .table-cell--xlarge {
    display: table-cell;
  }
}

.clearfix::after {
  clear: both;
  content: "";
  display: table;
}

.clear-l {
  clear: left;
}

.clear-r {
  clear: right;
}

.clear-b {
  clear: both;
}

.clear-n {
  clear: none;
}

.float-l {
  float: left;
}

.float-r {
  float: right;
}

.float-n {
  float: none;
}

@media screen and (min-width: 0px) {
  .clear-l--small {
    clear: left;
  }
  .clear-r--small {
    clear: right;
  }
  .clear-b--small {
    clear: both;
  }
  .clear-n--small {
    clear: none;
  }
  .float-l--small {
    float: left;
  }
  .float-r--small {
    float: right;
  }
  .float-n--small {
    float: none;
  }
}

@media screen and (min-width: 540px) {
  .clear-l--medium {
    clear: left;
  }
  .clear-r--medium {
    clear: right;
  }
  .clear-b--medium {
    clear: both;
  }
  .clear-n--medium {
    clear: none;
  }
  .float-l--medium {
    float: left;
  }
  .float-r--medium {
    float: right;
  }
  .float-n--medium {
    float: none;
  }
}

@media screen and (min-width: 768px) {
  .clear-l--large {
    clear: left;
  }
  .clear-r--large {
    clear: right;
  }
  .clear-b--large {
    clear: both;
  }
  .clear-n--large {
    clear: none;
  }
  .float-l--large {
    float: left;
  }
  .float-r--large {
    float: right;
  }
  .float-n--large {
    float: none;
  }
}

@media screen and (min-width: 1024px) {
  .clear-l--xlarge {
    clear: left;
  }
  .clear-r--xlarge {
    clear: right;
  }
  .clear-b--xlarge {
    clear: both;
  }
  .clear-n--xlarge {
    clear: none;
  }
  .float-l--xlarge {
    float: left;
  }
  .float-r--xlarge {
    float: right;
  }
  .float-n--xlarge {
    float: none;
  }
}

/*
  HIDE
*/
/*
  Totally nixes an element, making it inaccessible to screen readers and pretty
  much anything else except javascript, which sees straight through to the DOM.
*/
.hide {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
}

.gone {
  display: none;
}

@media screen and (min-width: 0px) {
  .hide--small {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
  }
  .gone--small {
    display: none;
  }
}

@media screen and (min-width: 540px) {
  .hide--medium {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
  }
  .gone--medium {
    display: none;
  }
}

@media screen and (min-width: 768px) {
  .hide--large {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
  }
  .gone--large {
    display: none;
  }
}

@media screen and (min-width: 1024px) {
  .hide--xlarge {
    position: absolute !important;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip: rect(1px, 1px, 1px, 1px);
  }
  .gone--xlarge {
    display: none;
  }
}

/*
  MEDIA
  NOTE 4/15/16: possibly move these or expand upon this file? this group seems
  nebulously-defined at this point
*/
.constrain {
  max-width: 100%;
}

.circle {
  border-radius: 100%;
}
